\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Nov 01 18:07:36 CET 2018
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_EXPAND
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "";

\proofObligation "#Proof Obligation Settings
#Thu Nov 01 18:07:36 CET 2018
name=NumericTextBox[NumericTextBox\\:\\:enterCharacter(int)].JML normal_behavior operation contract.0
contract=NumericTextBox[NumericTextBox\\:\\:enterCharacter(int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "allden" ) (keyVersion "19f0b8c2a4fe689cd76be6cd1753b36e2e825a89"))

(autoModeTime "3112")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "input,self,exc,heapAtPre,o,f"))
(rule "translateJavaAddInt" (formula "1") (term "1,0,0,0,0,1,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "9") (term "1,0,0,1,0,1"))
(rule "polySimp_homoEq" (formula "9") (term "0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "9") (term "0,0,0,0,0,0,1"))
(rule "polySimp_addComm1" (formula "9") (term "0,0,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "6"))
(rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "polySimp_sepPosMonomial" (formula "9") (term "0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,1"))
(rule "Query_axiom_for_isSingleDigit_int__in_NumericTextBox" (formula "5") (term "0") (inst "isSingleDigit_sk=isSingleDigit_sk_0") (inst "#p0=x_1") (inst "#self=n") (inst "#res=x") (ifseqformula "3"))
(rule "eqSymm" (formula "5") (term "0,1"))
(rule "applyEqRigid" (formula "5") (term "1,0,1") (ifseqformula "6"))
(rule "inEqSimp_sepPosMonomial0" (formula "7"))
(rule "polySimp_mulComm0" (formula "7") (term "1"))
(rule "polySimp_rightDist" (formula "7") (term "1"))
(rule "mul_literals" (formula "7") (term "0,1"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
(rule "polySimp_elimOne" (formula "7") (term "1,1"))
(rule "elementOfUnion" (formula "10") (term "0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "10") (term "1,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "10") (term "0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "10") (term "0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "10") (term "1,0,0,0,0,0,1,0,1"))
(rule "boxToDiamond" (formula "5") (term "1"))
(builtin "One Step Simplification" (formula "5"))
(rule "notLeft" (formula "5"))
(rule "Class_invariant_axiom_for_NumericTextBox" (formula "7") (inst "i=i") (inst "i_0=i_0") (ifseqformula "3"))
(builtin "One Step Simplification" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "7"))
(rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "9") (term "0,1,0"))
(rule "mul_literals" (formula "9") (term "1,0,0,0,1,0"))
(rule "add_literals" (formula "9") (term "0,0,0,1,0"))
(rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
(rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,1,0"))
(rule "mul_literals" (formula "9") (term "1,0,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
(rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
(rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "6"))
(rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
(rule "mul_literals" (formula "7") (term "0,1,0,0"))
(rule "polySimp_addAssoc" (formula "7") (term "0,0"))
(rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
(rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
(rule "add_literals" (formula "7") (term "1,1,0,0"))
(rule "times_zero_1" (formula "7") (term "1,0,0"))
(rule "add_literals" (formula "7") (term "0,0"))
(rule "qeq_literals" (formula "7") (term "0"))
(builtin "One Step Simplification" (formula "7"))
(rule "true_left" (formula "7"))
(rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "6"))
(rule "times_zero_1" (formula "7") (term "0,0"))
(rule "add_zero_left" (formula "7") (term "0"))
(rule "inEqSimp_sepPosMonomial1" (formula "7"))
(rule "mul_literals" (formula "7") (term "1"))
(rule "nnf_imp2or" (formula "10") (term "0"))
(rule "nnf_imp2or" (formula "9") (term "0"))
(rule "nnf_notAnd" (formula "10") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
(rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
(rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
(rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
(rule "nnf_notAnd" (formula "9") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
(rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
(rule "mul_literals" (formula "9") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
(rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
(rule "commute_or" (formula "10") (term "0,0"))
(rule "commute_and" (formula "9") (term "1,0"))
(rule "methodBodyExpand" (formula "14") (term "1") (newnames "heapBefore_enterCharacter,savedHeapBefore_enterCharacter"))
(builtin "One Step Simplification" (formula "14"))
(rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_isSingleDigit,savedHeapBefore_isSingleDigit"))
(builtin "One Step Simplification" (formula "12"))
(rule "cnf_rightDist" (formula "9") (term "0"))
(rule "distr_forallAnd" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "commute_or" (formula "10") (term "0"))
(rule "returnUnfold" (formula "13") (term "1") (inst "#v0=x_2"))
(rule "variableDeclarationAssign" (formula "13") (term "1"))
(rule "variableDeclaration" (formula "13") (term "1") (newnames "x_2"))
(rule "compound_assignment_3_nonsimple" (formula "13") (term "1"))
(rule "ifElseUnfold" (formula "15") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "15") (term "1") (newnames "x"))
(rule "compound_assignment_2" (formula "15") (term "1") (inst "#v=x_1"))
(rule "variableDeclarationAssign" (formula "15") (term "1"))
(rule "variableDeclaration" (formula "15") (term "1") (newnames "x_1"))
(builtin "Use Operation Contract" (formula "15") (newnames "heapBefore_isSingleDigit_0,result,exc_0,heapAfter_isSingleDigit,anon_heap_isSingleDigit") (contract "NumericTextBox[NumericTextBox::isSingleDigit(int)].JML normal_behavior operation contract.0"))
(branch "Post (isSingleDigit)"
   (builtin "One Step Simplification" (formula "13"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "14"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "eqSymm" (formula "15"))
   (rule "assignment" (formula "20") (term "1"))
   (builtin "One Step Simplification" (formula "20"))
   (rule "Class_invariant_axiom_for_NumericTextBox" (formula "16") (inst "i=i") (inst "i_0=i_0") (ifseqformula "3"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "16"))
   (rule "notLeft" (formula "16"))
   (rule "andLeft" (formula "16"))
   (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,0"))
   (rule "mul_literals" (formula "18") (term "1,0,0,0,1,0"))
   (rule "add_literals" (formula "18") (term "0,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "16"))
   (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
   (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,1,0"))
   (rule "mul_literals" (formula "18") (term "1,0,1,0"))
   (rule "pullOutSelect" (formula "19") (term "1,1,0") (inst "selectSK=NumericTextBox_EMPTY_0"))
   (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "24")) (ifInst ""  (formula "2")))
   (rule "applyEqReverse" (formula "20") (term "1,1,0") (ifseqformula "19"))
   (rule "hideAuxiliaryEq" (formula "19"))
   (rule "pullOutSelect" (formula "19") (term "1,0,1,0") (inst "selectSK=NumericTextBox_content_0"))
   (rule "applyEq" (formula "18") (term "1,0,1,1,0") (ifseqformula "19"))
   (rule "applyEq" (formula "21") (term "0") (ifseqformula "19"))
   (rule "applyEq" (formula "20") (term "0,1,1,1,0,0") (ifseqformula "19"))
   (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "19"))
   (rule "applyEq" (formula "18") (term "1,0,0,1,0") (ifseqformula "19"))
   (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "24")) (ifInst ""  (formula "2")))
   (rule "applyEqReverse" (formula "20") (term "1,0,1,0") (ifseqformula "19"))
   (rule "applyEqReverse" (formula "18") (term "1,0,1,1,0") (ifseqformula "19"))
   (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "19"))
   (rule "applyEqReverse" (formula "20") (term "0,1,1,1,0,0") (ifseqformula "19"))
   (rule "applyEqReverse" (formula "16") (term "0,0") (ifseqformula "19"))
   (rule "applyEqReverse" (formula "18") (term "1,0,0,1,0") (ifseqformula "19"))
   (rule "hideAuxiliaryEq" (formula "19"))
   (rule "inEqSimp_commuteGeq" (formula "16"))
   (rule "pullOutSelect" (formula "19") (term "1,0,0,0") (inst "selectSK=NumericTextBox_cursorPosition_0"))
   (rule "applyEq" (formula "16") (term "0") (ifseqformula "19"))
   (rule "applyEq" (formula "18") (term "1,1,1,0,0") (ifseqformula "19"))
   (rule "applyEq" (formula "17") (term "0") (ifseqformula "19"))
   (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "23")) (ifInst ""  (formula "2")))
   (rule "applyEqReverse" (formula "20") (term "1,0,0,0") (ifseqformula "19"))
   (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "19"))
   (rule "applyEqReverse" (formula "18") (term "1,1,1,0,0") (ifseqformula "19"))
   (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "19"))
   (rule "hideAuxiliaryEq" (formula "18"))
   (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "6"))
   (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
   (rule "mul_literals" (formula "16") (term "0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
   (rule "polySimp_addComm0" (formula "16") (term "0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
   (rule "add_literals" (formula "16") (term "1,1,0,0"))
   (rule "times_zero_1" (formula "16") (term "1,0,0"))
   (rule "add_literals" (formula "16") (term "0,0"))
   (rule "qeq_literals" (formula "16") (term "0"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "true_left" (formula "16"))
   (rule "nnf_imp2or" (formula "17") (term "0"))
   (rule "nnf_imp2or" (formula "16") (term "0"))
   (rule "nnf_notAnd" (formula "17") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
   (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
   (rule "nnf_notAnd" (formula "16") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
   (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
   (rule "mul_literals" (formula "16") (term "1,0,0,0"))
   (rule "commute_or" (formula "17") (term "0,0"))
   (rule "compound_assignment_1_new" (formula "21") (term "1"))
   (builtin "One Step Simplification" (formula "21"))
   (rule "commute_and" (formula "16") (term "1,0"))
   (rule "cnf_rightDist" (formula "16") (term "0"))
   (rule "distr_forallAnd" (formula "16"))
   (rule "andLeft" (formula "16"))
   (rule "commute_or" (formula "17") (term "0"))
   (rule "arrayLengthIsAShort" (formula "6") (term "1,1"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "true_left" (formula "6"))
   (rule "arrayLengthNotNegative" (formula "6") (term "1,1"))
   (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "8"))
   (rule "leq_literals" (formula "6") (term "0"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "true_left" (formula "6"))
   (rule "ifElseUnfold" (formula "20") (term "1") (inst "#boolv=x_3"))
   (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_5"))
   (rule "compound_assignment_2" (formula "20") (term "1") (inst "#v=x_6"))
   (rule "variableDeclarationAssign" (formula "20") (term "1"))
   (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_6"))
   (rule "greater_equal_than_comparison_simple" (formula "20") (term "1"))
   (builtin "One Step Simplification" (formula "20"))
   (rule "compound_assignment_1_new" (formula "20") (term "1"))
   (builtin "One Step Simplification" (formula "20"))
   (rule "ifElseSplit" (formula "22"))
   (branch "if x true"
      (builtin "One Step Simplification" (formula "23"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "apply_eq_boolean" (formula "15") (term "1") (ifseqformula "19"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "notLeft" (formula "15"))
      (rule "ifUnfold" (formula "23") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_15"))
      (rule "compound_inequality_comparison_1" (formula "23") (term "1") (inst "#v0=t"))
      (rule "variableDeclarationAssign" (formula "23") (term "1"))
      (rule "variableDeclaration" (formula "23") (term "1") (newnames "t_2"))
      (rule "assignment_read_attribute_this" (formula "23"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "pullOutSelect" (formula "23") (term "0,1,0") (inst "selectSK=NumericTextBox_textBoxRenderer_1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "3")))
      (rule "applyEqReverse" (formula "24") (term "0,1,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "inequality_comparison_simple" (formula "23") (term "1"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "ifElseSplit" (formula "21"))
      (branch "if x_5 true"
         (builtin "One Step Simplification" (formula "22"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "18"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "false_right" (formula "19"))
         (rule "inEqSimp_geqRight" (formula "18"))
         (rule "times_zero_1" (formula "1") (term "1,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0"))
         (rule "assignment" (formula "21") (term "1"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
         (rule "methodCallReturn" (formula "21") (term "1"))
         (rule "assignment" (formula "21") (term "1"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "methodCallEmpty" (formula "21") (term "1"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "emptyModality" (formula "21") (term "1"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "closeTrue" (formula "21"))
      )
      (branch "if x_5 false"
         (builtin "One Step Simplification" (formula "22"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "1"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "inEqSimp_leqRight" (formula "19"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "1"))
         (rule "leq_literals" (formula "2") (term "0"))
         (builtin "One Step Simplification" (formula "2"))
         (rule "true_left" (formula "2"))
         (rule "less_equal_than_comparison_simple" (formula "21") (term "1"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "blockEmpty" (formula "21") (term "1"))
         (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0,1,0") (ifseqformula "1"))
         (rule "qeq_literals" (formula "21") (term "0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "methodCallReturn" (formula "21") (term "1"))
         (rule "assignment" (formula "21") (term "1"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "methodCallEmpty" (formula "21") (term "1"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "emptyModality" (formula "21") (term "1"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "closeTrue" (formula "21"))
      )
   )
   (branch "if x false"
      (builtin "One Step Simplification" (formula "23"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "applyEq" (formula "16") (term "1") (ifseqformula "1"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "andLeft" (formula "16"))
      (rule "replace_known_left" (formula "22") (term "0,0,1,0") (ifseqformula "16"))
      (builtin "One Step Simplification" (formula "22"))
      (rule "ifElseUnfold" (formula "24") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_7"))
      (rule "compound_greater_equal_than_comparison_2" (formula "24") (term "1") (inst "#v1=x_9") (inst "#v0=x_8"))
      (rule "variableDeclarationAssign" (formula "24") (term "1"))
      (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_8"))
      (rule "assignment_read_attribute_this" (formula "24"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "replaceKnownSelect_taclet0_4" (formula "24") (term "0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_5" (formula "24") (term "0,1,0"))
      (rule "variableDeclarationAssign" (formula "24") (term "1"))
      (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_9"))
      (rule "eval_order_array_access6" (formula "24") (term "1") (inst "#v0=x_arr"))
      (rule "variableDeclarationAssign" (formula "24") (term "1"))
      (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_arr"))
      (rule "assignment_read_attribute_this" (formula "24"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "replaceKnownSelect_taclet0_2" (formula "24") (term "0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_3" (formula "24") (term "0,1,0"))
      (rule "assignment_read_length" (formula "24"))
      (branch "Normal Execution (x_arr != null)"
         (builtin "One Step Simplification" (formula "24"))
         (rule "greater_equal_than_comparison_simple" (formula "24") (term "1"))
         (builtin "One Step Simplification" (formula "24"))
         (rule "inEqSimp_contradInEq0" (formula "24") (term "0,0,1,0") (ifseqformula "7"))
         (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,1,0"))
         (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,1,0"))
         (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0,1,0"))
         (rule "add_literals" (formula "24") (term "1,1,0,0,0,0,1,0"))
         (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,1,0"))
         (rule "add_literals" (formula "24") (term "0,0,0,0,1,0"))
         (rule "leq_literals" (formula "24") (term "0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "24"))
         (rule "ifElseSplit" (formula "22"))
         (branch "if x_5 true"
            (builtin "One Step Simplification" (formula "23"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "if x_5 false"
            (builtin "One Step Simplification" (formula "23"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "less_equal_than_comparison_simple" (formula "22") (term "1"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "replace_known_left" (formula "22") (term "0,0,1,0") (ifseqformula "17"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "blockEmpty" (formula "22") (term "1"))
            (rule "methodCallReturn" (formula "22") (term "1"))
            (rule "assignment" (formula "22") (term "1"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "methodCallEmpty" (formula "22") (term "1"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "emptyModality" (formula "22") (term "1"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "false_right" (formula "22"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "7") (term "0,1,1") (ifseqformula "2"))
            (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "22"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "ifElseSplit" (formula "24"))
            (branch "if x_7 true"
               (builtin "One Step Simplification" (formula "25"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if x_7 false"
               (builtin "One Step Simplification" (formula "25"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "eval_order_array_access1" (formula "24") (term "1") (inst "#v0=x_arr"))
               (rule "variableDeclarationAssign" (formula "24") (term "1"))
               (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_arr_1"))
               (rule "assignment_read_attribute_this" (formula "24"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "replaceKnownSelect_taclet0_2" (formula "24") (term "0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0_3" (formula "24") (term "0,1,0"))
               (rule "eval_order_array_access2" (formula "24") (term "1") (inst "#v0=x") (inst "#ar1=x_arr_2"))
               (rule "variableDeclarationAssign" (formula "24") (term "1"))
               (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_arr_2"))
               (rule "assignment" (formula "24") (term "1"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "variableDeclarationAssign" (formula "24") (term "1"))
               (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_10"))
               (rule "assignment_read_attribute_this" (formula "24"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "replaceKnownSelect_taclet0_4" (formula "24") (term "0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0_5" (formula "24") (term "0,1,0"))
               (rule "assignment_to_primitive_array_component" (formula "24"))
               (branch "Normal Execution (x_arr_2 != null)"
                  (builtin "One Step Simplification" (formula "24"))
                  (rule "postincrement_attribute" (formula "24") (term "1") (inst "#v=n"))
                  (rule "variableDeclarationAssign" (formula "24") (term "1"))
                  (rule "variableDeclaration" (formula "24") (term "1") (newnames "n"))
                  (rule "assignment" (formula "24") (term "1"))
                  (builtin "One Step Simplification" (formula "24"))
                  (rule "eval_order_access4" (formula "24") (term "1") (inst "#v1=x") (inst "#v0=n_1"))
                  (rule "variableDeclarationAssign" (formula "24") (term "1"))
                  (rule "variableDeclaration" (formula "24") (term "1") (newnames "n_1"))
                  (rule "assignment" (formula "24") (term "1"))
                  (builtin "One Step Simplification" (formula "24"))
                  (rule "variableDeclarationAssign" (formula "24") (term "1"))
                  (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_11"))
                  (rule "compound_int_cast_expression" (formula "24") (term "1") (inst "#v=x_12"))
                  (rule "variableDeclarationAssign" (formula "24") (term "1"))
                  (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_12"))
                  (rule "remove_parentheses_right" (formula "24") (term "1"))
                  (rule "compound_addition_1" (formula "24") (term "1") (inst "#v=x_13"))
                  (rule "variableDeclarationAssign" (formula "24") (term "1"))
                  (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_13"))
                  (rule "assignment_read_attribute" (formula "24"))
                  (branch "Normal Execution (n != null)"
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "dismissNonSelectedField" (formula "24") (term "0,1,0"))
                     (rule "replaceKnownSelect_taclet0_4" (formula "24") (term "0,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0_5" (formula "24") (term "0,1,0"))
                     (rule "assignmentAdditionInt" (formula "24") (term "1"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "translateJavaAddInt" (formula "24") (term "0,1,0"))
                     (rule "polySimp_addComm0" (formula "24") (term "0,1,0"))
                     (rule "widening_identity_cast_5" (formula "24") (term "1"))
                     (rule "assignment" (formula "24") (term "1"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "assignment_write_attribute" (formula "24"))
                     (branch "Normal Execution (n_1 != null)"
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "ifUnfold" (formula "24") (term "1") (inst "#boolv=x"))
                        (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_14"))
                        (rule "compound_inequality_comparison_1" (formula "24") (term "1") (inst "#v0=t"))
                        (rule "variableDeclarationAssign" (formula "24") (term "1"))
                        (rule "variableDeclaration" (formula "24") (term "1") (newnames "t"))
                        (rule "assignment_read_attribute_this" (formula "24"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,1,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,1,0"))
                        (rule "pullOutSelect" (formula "24") (term "0,1,0") (inst "selectSK=NumericTextBox_textBoxRenderer_0"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")) (ifInst ""  (formula "4")))
                        (rule "applyEqReverse" (formula "25") (term "0,1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "inequality_comparison_simple" (formula "24") (term "1"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "ifSplit" (formula "24"))
                        (branch "if x_14 true"
                           (builtin "One Step Simplification" (formula "25"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "eval_order_access1" (formula "25") (term "1") (inst "#v0=t"))
                           (rule "variableDeclarationAssign" (formula "25") (term "1"))
                           (rule "variableDeclaration" (formula "25") (term "1") (newnames "t_1"))
                           (rule "assignment_read_attribute_this" (formula "25"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "dismissNonSelectedField" (formula "25") (term "0,1,0"))
                           (rule "dismissNonSelectedField" (formula "25") (term "0,1,0"))
                           (rule "replaceKnownSelect_taclet00011010_6" (formula "25") (term "0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet00011010_7" (formula "25") (term "0,1,0"))
                           (rule "assignment_write_attribute" (formula "25"))
                           (branch "Normal Execution (t_1 != null)"
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "methodCallEmpty" (formula "25") (term "1"))
                              (rule "tryEmpty" (formula "25") (term "1"))
                              (rule "emptyModality" (formula "25") (term "1"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "eqSymm" (formula "25") (term "1,0,0,1"))
                              (rule "polySimp_homoEq" (formula "25") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "1,0,1,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "1,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "1,0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "1,0,1,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,0,1,1,0"))
                              (rule "replaceKnownSelect_taclet00011010_6" (formula "25") (term "0,0,0,0,1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00011010_7" (formula "25") (term "0,0,0,0,1,1,0"))
                              (rule "replace_known_right" (formula "25") (term "0,0,0,1,1,0") (ifseqformula "22"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "dismissNonSelectedField" (formula "25") (term "1,0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "1,0,0,1,1,0"))
                              (rule "replaceKnownSelect_taclet00011010_6" (formula "25") (term "1,0,0,1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00011010_7" (formula "25") (term "1,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "1,0,0,1,0"))
                              (rule "replaceKnownSelect_taclet0_2" (formula "25") (term "1,0,0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0_3" (formula "25") (term "1,0,0,1,0"))
                              (rule "polySimp_sepPosMonomial" (formula "25") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                              (rule "pullOutSelect" (formula "25") (term "0,0,1,1,0") (inst "selectSK=TextBoxRenderer_contentChanged_0"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "0"))
                              (rule "applyEqReverse" (formula "26") (term "0,0,1,1,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "25") (term "0,0,0") (inst "selectSK=NumericTextBox_cursorPosition_2"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "0"))
                              (rule "applyEqReverse" (formula "26") (term "0,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "25") (term "0,0,0") (inst "selectSK=arr_4"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "0"))
                              (rule "applyEqReverse" (formula "26") (term "0,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "Class_invariant_axiom_for_NumericTextBox" (formula "25") (term "0") (inst "i=i") (inst "i_0=i_0") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "dismissNonSelectedField" (formula "25") (term "1,0,0,1,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "1,1,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "0,1,1,0,0,0"))
                              (rule "replaceKnownSelect_taclet0000011010_10" (formula "25") (term "0,1,1,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000011010_11" (formula "25") (term "0,1,1,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "0,1,1,0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "0,0,1,0,0,0"))
                              (rule "replaceKnownSelect_taclet0000011010_10" (formula "25") (term "0,0,1,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000011010_11" (formula "25") (term "0,0,1,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "0,1,0,1,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "1,0,0,0,1,0"))
                              (rule "replaceKnownSelect_taclet0000011010_10" (formula "25") (term "1,0,0,0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000011010_11" (formula "25") (term "1,0,0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "0,1,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "0,1,1,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "1,1,0,0,1,0,0"))
                              (rule "replaceKnownSelect_taclet0000011010_10" (formula "25") (term "1,1,0,0,1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000011010_11" (formula "25") (term "1,1,0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "1,0,0,1,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "1,1,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "0,1,1,0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "0,1,0,1,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "1,0,1,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "1,0,1,1,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "1,0,0,1,0,1,0,0"))
                              (rule "replaceKnownSelect_taclet0_2" (formula "25") (term "1,0,0,1,0,1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0_3" (formula "25") (term "1,0,0,1,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "1,1,0,1,0"))
                              (rule "replaceKnownSelect_taclet0_0" (formula "25") (term "1,1,0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "25") (term "1,1,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "0,1,1,0,0,1,0"))
                              (rule "replaceKnownSelect_taclet0_2" (formula "25") (term "0,1,1,0,0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0_3" (formula "25") (term "0,1,1,0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "0,1,0,1,0,0,0"))
                              (rule "replaceKnownSelect_taclet0_2" (formula "25") (term "0,1,0,1,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0_3" (formula "25") (term "0,1,0,1,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "1,0,1,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "0,1,1,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,0,0,0"))
                              (rule "replaceKnownSelect_taclet0_2" (formula "25") (term "0,0,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0_3" (formula "25") (term "0,0,0,0,0,0"))
                              (rule "replace_known_right" (formula "25") (term "0,0,0,0,0") (ifseqformula "23"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "dismissNonSelectedField" (formula "25") (term "1,0,1,1,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "0,0,1,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "0,1,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "1,0,1,1,0,1,0,0"))
                              (rule "replaceKnownSelect_taclet0_2" (formula "25") (term "1,0,1,1,0,1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0_3" (formula "25") (term "1,0,1,1,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "0,0,1,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "25") (term "1,0,1,0,1,0"))
                              (rule "replaceKnownSelect_taclet0_2" (formula "25") (term "1,0,1,0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0_3" (formula "25") (term "1,0,1,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,1,0,0"))
                              (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,1,0,0"))
                              (rule "mul_literals" (formula "25") (term "1,0,0,0,1,0,1,0,0"))
                              (rule "add_literals" (formula "25") (term "0,0,0,1,0,1,0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "25") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,1,0,1,0,0"))
                              (rule "mul_literals" (formula "25") (term "1,0,1,0,1,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "0,0,0,0,0"))
                              (rule "replace_known_left" (formula "25") (term "0,0,0,0") (ifseqformula "8"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "inEqSimp_subsumption1" (formula "25") (term "0,0,0") (ifseqformula "10"))
                              (rule "leq_literals" (formula "25") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "nnf_imp2or" (formula "25") (term "0,0,0"))
                              (rule "nnf_imp2or" (formula "25") (term "0,1,0"))
                              (rule "nnf_notAnd" (formula "25") (term "0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,0,0"))
                              (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0,0,0"))
                              (rule "add_literals" (formula "25") (term "0,0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,0,0"))
                              (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0,0"))
                              (rule "nnf_notAnd" (formula "25") (term "0,0,1,0"))
                              (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,1,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,1,0"))
                              (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,1,0"))
                              (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,1,0"))
                              (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0,1,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0,1,0"))
                              (rule "add_literals" (formula "25") (term "0,0,0,0,0,0,1,0"))
                              (rule "add_zero_left" (formula "25") (term "0,0,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0,1,0"))
                              (rule "andRight" (formula "25"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "25"))
                                 (branch "Case 1"
                                    (rule "allRight" (formula "25") (inst "sk=i_0_2"))
                                    (rule "orRight" (formula "25"))
                                    (rule "orRight" (formula "25"))
                                    (rule "inEqSimp_leqRight" (formula "25"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "26"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "pullOutSelect" (formula "27") (term "0,1") (inst "selectSK=arr_6"))
                                    (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_7"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")) (ifInst ""  (formula "11")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "11"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "commute_and" (formula "29"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "self.cursorPosition = i_0_2 TRUE"
                                       (rule "applyEqReverse" (formula "30") (term "0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "30") (term "0,1") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_left" (formula "29") (term "1") (ifseqformula "22"))
                                       (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "21")))
                                       (rule "closeTrue" (formula "29"))
                                    )
                                    (branch "self.cursorPosition = i_0_2 FALSE"
                                       (rule "applyEqReverse" (formula "30") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "30") (term "0,1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "25"))
                                       (rule "inEqSimp_contradEq7" (formula "25") (ifseqformula "2"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                                       (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "25") (term "0,0"))
                                       (rule "leq_literals" (formula "25") (term "0"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "false_right" (formula "25"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "11"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "qeq_literals" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "allLeft" (formula "14") (inst "t=i_0_2"))
                                       (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0") (ifseqformula "3"))
                                       (rule "qeq_literals" (formula "14") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,0"))
                                       (rule "leq_literals" (formula "14") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "14"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "inEqSimp_leqRight" (formula "29"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "1"))
                                       (rule "leq_literals" (formula "15") (term "0"))
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "allLeft" (formula "16") (inst "t=i_0_2"))
                                       (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0") (ifseqformula "4"))
                                       (rule "qeq_literals" (formula "16") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0"))
                                       (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "16") (term "0,0,0"))
                                       (rule "leq_literals" (formula "16") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "16") (term "0"))
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "closeFalse" (formula "16"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "25") (inst "sk=i_2"))
                                    (rule "orRight" (formula "25"))
                                    (rule "orRight" (formula "25"))
                                    (rule "inEqSimp_leqRight" (formula "25"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "26"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=arr_5"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "28"))
                                    (rule "inEqSimp_contradEq3" (formula "1") (term "0,0") (ifseqformula "3"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                    (rule "qeq_literals" (formula "1") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")) (ifInst ""  (formula "10")))
                                    (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "eqSymm" (formula "27"))
                                    (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "2"))
                                    (rule "times_zero_1" (formula "12") (term "0,0"))
                                    (rule "add_zero_left" (formula "12") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                    (rule "mul_literals" (formula "12") (term "1"))
                                    (rule "allLeft" (formula "16") (inst "t=i_2"))
                                    (rule "replace_known_right" (formula "16") (term "1") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "inEqSimp_commuteGeq" (formula "16") (term "0"))
                                    (rule "inEqSimp_homoInEq0" (formula "16") (term "1"))
                                    (rule "polySimp_addComm1" (formula "16") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,1"))
                                    (rule "mul_literals" (formula "16") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,1,1"))
                                    (rule "inEqSimp_contradInEq0" (formula "16") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "16") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "16") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                    (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "16") (term "0,0,1"))
                                    (rule "leq_literals" (formula "16") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "1"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "inEqSimp_homoInEq1" (formula "16"))
                                    (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                                    (rule "add_literals" (formula "16") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "16") (term "1,0"))
                                    (rule "add_zero_right" (formula "16") (term "0"))
                                    (rule "leq_literals" (formula "16"))
                                    (rule "closeFalse" (formula "16"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "25") (inst "sk=f_1"))
                                 (rule "allRight" (formula "25") (inst "sk=o_1"))
                                 (rule "orRight" (formula "25"))
                                 (rule "orRight" (formula "25"))
                                 (rule "orRight" (formula "25"))
                                 (rule "orRight" (formula "25"))
                                 (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=f_1_0"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "30"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "eqSymm" (formula "1") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "28"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "eqSymm" (formula "1") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "27"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "1") (term "1,0,0"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "26"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")) (ifInst ""  (formula "30")))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch "Null Reference (t_1 = null)"
                              (rule "false_right" (formula "26"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "if x_14 false"
                           (builtin "One Step Simplification" (formula "25"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "methodCallEmpty" (formula "25") (term "1"))
                           (rule "tryEmpty" (formula "25") (term "1"))
                           (rule "emptyModality" (formula "25") (term "1"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "eqSymm" (formula "25") (term "1,0,0,1"))
                           (rule "polySimp_homoEq" (formula "25") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                           (rule "dismissNonSelectedField" (formula "25") (term "0,1,0,1,1,0"))
                           (rule "dismissNonSelectedField" (formula "25") (term "0,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,0,1,1,0"))
                           (rule "dismissNonSelectedField" (formula "25") (term "1,0,1,0,1,1,0"))
                           (rule "dismissNonSelectedField" (formula "25") (term "1,0,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,0,1,1,0"))
                           (rule "replaceKnownSelect_taclet00011010_6" (formula "25") (term "0,0,0,0,1,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet00011010_7" (formula "25") (term "0,0,0,0,1,1,0"))
                           (rule "replace_known_left" (formula "25") (term "0,0,0,1,1,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "dismissNonSelectedField" (formula "25") (term "1,0,0,1,0"))
                           (rule "replaceKnownSelect_taclet0_2" (formula "25") (term "1,0,0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0_3" (formula "25") (term "1,0,0,1,0"))
                           (rule "applyEq" (formula "25") (term "1,0,1,0,0,0,0,1") (ifseqformula "1"))
                           (rule "polySimp_sepPosMonomial" (formula "25") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                           (rule "pullOutSelect" (formula "25") (term "0,0,1,0") (inst "selectSK=arr_0"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "26") (term "0,0,1,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "25") (term "0,0,0") (inst "selectSK=NumericTextBox_cursorPosition_1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "26") (term "0,0,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "Class_invariant_axiom_for_NumericTextBox" (formula "25") (term "0") (inst "i=i") (inst "i_0=i_0") (ifseqformula "5"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "replaceKnownSelect_taclet100011010_10" (formula "25") (term "1,0,0,0,1,0"))
                           (rule "replaceKnownSelect_taclet100011010_10" (formula "25") (term "0,0,1,0,0,0"))
                           (rule "replaceKnownSelect_taclet100011010_10" (formula "25") (term "0,1,1,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet100011010_11" (formula "25") (term "1,0,0,0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet100011010_11" (formula "25") (term "0,0,1,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet100011010_11" (formula "25") (term "0,1,1,0,0,0"))
                           (rule "replaceKnownSelect_taclet100011010_10" (formula "25") (term "1,1,0,0,1,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet100011010_11" (formula "25") (term "1,1,0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "25") (term "1,0,1,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "25") (term "1,0,1,1,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "25") (term "1,1,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "25") (term "0,1,1,0,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "25") (term "0,1,0,1,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "25") (term "0,0,1,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "25") (term "0,1,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "25") (term "1,0,1,1,0,1,0,0"))
                           (rule "replaceKnownSelect_taclet0_2" (formula "25") (term "1,0,1,1,0,1,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0_3" (formula "25") (term "1,0,1,1,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "25") (term "1,1,0,1,0"))
                           (rule "replaceKnownSelect_taclet0_0" (formula "25") (term "1,1,0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "25") (term "1,1,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet0_2" (formula "25") (term "0,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0_3" (formula "25") (term "0,0,0,0,0,0"))
                           (rule "replace_known_right" (formula "25") (term "0,0,0,0,0") (ifseqformula "23"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "dismissNonSelectedField" (formula "25") (term "0,1,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet0_2" (formula "25") (term "0,1,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0_3" (formula "25") (term "0,1,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "25") (term "0,1,1,0,0,1,0"))
                           (rule "replaceKnownSelect_taclet0_2" (formula "25") (term "0,1,1,0,0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0_3" (formula "25") (term "0,1,1,0,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "25") (term "1,0,1,0,1,0"))
                           (rule "replaceKnownSelect_taclet0_2" (formula "25") (term "1,0,1,0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0_3" (formula "25") (term "1,0,1,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "25") (term "0,1,1,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "25") (term "1,0,0,1,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "25") (term "1,0,0,1,0,1,0,0"))
                           (rule "replaceKnownSelect_taclet0_2" (formula "25") (term "1,0,0,1,0,1,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0_3" (formula "25") (term "1,0,0,1,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,1,0,0"))
                           (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,1,0,0"))
                           (rule "mul_literals" (formula "25") (term "1,0,0,0,1,0,1,0,0"))
                           (rule "add_literals" (formula "25") (term "0,0,0,1,0,1,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "25") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,1,0,1,0,0"))
                           (rule "mul_literals" (formula "25") (term "1,0,1,0,1,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "0,0,0,0,0"))
                           (rule "replace_known_left" (formula "25") (term "0,0,0,0") (ifseqformula "9"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "inEqSimp_subsumption1" (formula "25") (term "0,0,0") (ifseqformula "11"))
                           (rule "leq_literals" (formula "25") (term "0,0,0,0"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "nnf_imp2or" (formula "25") (term "0,0,0"))
                           (rule "nnf_imp2or" (formula "25") (term "0,1,0"))
                           (rule "nnf_notAnd" (formula "25") (term "0,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,0,0"))
                           (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "25") (term "0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,0,0"))
                           (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "25") (term "0,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0,1,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0,1,0"))
                           (rule "add_literals" (formula "25") (term "0,0,0,0,0,0,1,0"))
                           (rule "add_zero_left" (formula "25") (term "0,0,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0,1,0"))
                           (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,1,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,1,0"))
                           (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,1,0"))
                           (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,1,0"))
                           (rule "andRight" (formula "25"))
                           (branch "Case 1"
                              (rule "andRight" (formula "25"))
                              (branch "Case 1"
                                 (rule "allRight" (formula "25") (inst "sk=i_0_1"))
                                 (rule "orRight" (formula "25"))
                                 (rule "orRight" (formula "25"))
                                 (rule "inEqSimp_leqRight" (formula "25"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "26"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "27") (term "0,0") (inst "selectSK=arr_2"))
                                 (rule "applyEq" (formula "28") (term "0,1") (ifseqformula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")) (ifInst ""  (formula "12")))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "12"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                 (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "mul_literals" (formula "2") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                 (rule "commute_and" (formula "29"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "self.cursorPosition = i_0_1 TRUE"
                                    (rule "applyEqReverse" (formula "30") (term "0,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "30") (term "0,1") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_left" (formula "29") (term "1") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "22")))
                                    (rule "closeTrue" (formula "29"))
                                 )
                                 (branch "self.cursorPosition = i_0_1 FALSE"
                                    (rule "applyEqReverse" (formula "30") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "30") (term "0,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "26"))
                                    (rule "inEqSimp_contradEq7" (formula "26") (ifseqformula "2"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                    (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "26") (term "0,0"))
                                    (rule "leq_literals" (formula "26") (term "0"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "false_right" (formula "26"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "12"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "allLeft" (formula "23") (inst "t=i_0_1"))
                                    (rule "replaceKnownSelect_taclet00100011010_13" (formula "23") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00100011010_14" (formula "23") (term "0,1"))
                                    (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                    (rule "leq_literals" (formula "23") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "inEqSimp_leqRight" (formula "29"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "24") (term "0"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "true_left" (formula "24"))
                                    (rule "allLeft" (formula "17") (inst "t=i_0_1"))
                                    (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "17") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "17") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "17"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0"))
                                    (rule "add_zero_right" (formula "3") (term "0"))
                                    (rule "leq_literals" (formula "3"))
                                    (rule "closeFalse" (formula "3"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "25") (inst "sk=i_1"))
                                 (rule "orRight" (formula "25"))
                                 (rule "orRight" (formula "25"))
                                 (rule "inEqSimp_leqRight" (formula "25"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "26"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=arr_1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "28"))
                                 (rule "inEqSimp_contradEq3" (formula "1") (term "0,0") (ifseqformula "3"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                 (rule "qeq_literals" (formula "1") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")) (ifInst ""  (formula "11")))
                                 (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "eqSymm" (formula "27"))
                                 (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "2"))
                                 (rule "times_zero_1" (formula "13") (term "0,0"))
                                 (rule "add_zero_left" (formula "13") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                 (rule "mul_literals" (formula "13") (term "1"))
                                 (rule "allLeft" (formula "17") (inst "t=i_1"))
                                 (rule "replace_known_right" (formula "17") (term "1") (ifseqformula "29"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "inEqSimp_commuteGeq" (formula "17") (term "0"))
                                 (rule "inEqSimp_homoInEq0" (formula "17") (term "1"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1"))
                                 (rule "mul_literals" (formula "17") (term "0,1,1"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq0" (formula "17") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                 (rule "leq_literals" (formula "17") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "inEqSimp_contradInEq1" (formula "17") (ifseqformula "1"))
                                 (rule "andLeft" (formula "17"))
                                 (rule "inEqSimp_homoInEq1" (formula "17"))
                                 (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0"))
                                 (rule "add_literals" (formula "17") (term "0"))
                                 (rule "leq_literals" (formula "17"))
                                 (rule "closeFalse" (formula "17"))
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "25") (inst "sk=f_0"))
                              (rule "allRight" (formula "25") (inst "sk=o_0"))
                              (rule "orRight" (formula "25"))
                              (rule "orRight" (formula "25"))
                              (rule "orRight" (formula "25"))
                              (rule "orRight" (formula "25"))
                              (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=f_0_0"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "30"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "27"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "26"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")) (ifInst ""  (formula "30")))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                     )
                     (branch "Null Reference (n_1 = null)"
                        (builtin "One Step Simplification" (formula "25"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "Null Reference (n = null)"
                     (builtin "One Step Simplification" (formula "25"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Null Reference (x_arr_2 = null)"
                  (rule "false_right" (formula "25"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "Index Out of Bounds (x_arr_2 != null, but x_10 Out of Bounds!)"
                  (rule "false_right" (formula "25"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "1") (term "0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "1,1"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "11"))
                  (rule "qeq_literals" (formula "1") (term "0,1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "9"))
                  (rule "andLeft" (formula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "1,1,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0"))
                  (rule "add_zero_right" (formula "1") (term "0"))
                  (rule "leq_literals" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
      )
      (branch "Null Reference (x_arr = null)"
         (rule "false_right" (formula "25"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
         (rule "closeFalse" (formula "1"))
      )
   )
)
(branch "Exceptional Post (isSingleDigit)"
   (builtin "One Step Simplification" (formula "13"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "andLeft" (formula "13"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "1,0") (ifseqformula "13"))
   (rule "andLeft" (formula "14"))
   (rule "andLeft" (formula "14"))
   (rule "andLeft" (formula "16"))
   (rule "notLeft" (formula "14"))
   (rule "close" (formula "17") (ifseqformula "16"))
)
(branch "Pre (isSingleDigit)"
   (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "1")))
   (rule "Class_invariant_axiom_for_NumericTextBox" (formula "15") (inst "i=i") (inst "i_0=i_0") (ifseqformula "3"))
   (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "12")) (ifInst ""  (formula "8")))
   (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,1,0"))
   (rule "mul_literals" (formula "15") (term "1,0,0,0,1,0,1,0"))
   (rule "add_literals" (formula "15") (term "0,0,0,1,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1"))
   (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1"))
   (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1"))
   (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,1,0,1,0"))
   (rule "mul_literals" (formula "15") (term "1,0,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0"))
   (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0"))
   (rule "inEqSimp_subsumption0" (formula "15") (term "0,0") (ifseqformula "6"))
   (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0"))
   (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0"))
   (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0,0"))
   (rule "add_literals" (formula "15") (term "1,1,0,0,0,0"))
   (rule "times_zero_1" (formula "15") (term "1,0,0,0,0"))
   (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
   (rule "qeq_literals" (formula "15") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "nnf_imp2or" (formula "15") (term "0,0"))
   (rule "nnf_imp2or" (formula "15") (term "0,1"))
   (rule "nnf_notAnd" (formula "15") (term "0,0,0"))
   (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0,0"))
   (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0,0"))
   (rule "add_zero_right" (formula "15") (term "0,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,0"))
   (rule "mul_literals" (formula "15") (term "1,0,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,0"))
   (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,0"))
   (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,0"))
   (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,0"))
   (rule "add_zero_left" (formula "15") (term "0,0,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
   (rule "nnf_notAnd" (formula "15") (term "0,0,1"))
   (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,1"))
   (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,1"))
   (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,1"))
   (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,1"))
   (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,1"))
   (rule "add_zero_left" (formula "15") (term "0,0,1,0,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1"))
   (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,1"))
   (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,1"))
   (rule "mul_literals" (formula "15") (term "0,1,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0,1"))
   (rule "arrayLengthIsAShort" (formula "6") (term "1,1"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "true_left" (formula "6"))
   (rule "arrayLengthNotNegative" (formula "6") (term "1,1"))
   (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "8"))
   (rule "leq_literals" (formula "6") (term "0"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "true_left" (formula "6"))
   (rule "ifElseUnfold" (formula "13") (term "1") (inst "#boolv=x_3"))
   (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_3"))
   (rule "compound_assignment_2" (formula "13") (term "1") (inst "#v=x_4"))
   (rule "variableDeclarationAssign" (formula "13") (term "1"))
   (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_4"))
   (rule "greater_equal_than_comparison_simple" (formula "13") (term "1"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "compound_assignment_1_new" (formula "13") (term "1"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "ifElseSplit" (formula "13"))
   (branch "if x_3 true"
      (builtin "One Step Simplification" (formula "14"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "inEqSimp_geqRight" (formula "12"))
      (rule "times_zero_1" (formula "1") (term "1,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0"))
      (rule "assignment" (formula "14") (term "1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "methodCallReturn" (formula "14") (term "1"))
      (rule "assignment" (formula "14") (term "1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "methodCallEmpty" (formula "14") (term "1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "emptyModality" (formula "14") (term "1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "closeTrue" (formula "14"))
   )
   (branch "if x_3 false"
      (builtin "One Step Simplification" (formula "14"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "less_equal_than_comparison_simple" (formula "14") (term "1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "blockEmpty" (formula "14") (term "1"))
      (rule "methodCallReturn" (formula "14") (term "1"))
      (rule "assignment" (formula "14") (term "1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "methodCallEmpty" (formula "14") (term "1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "emptyModality" (formula "14") (term "1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "notRight" (formula "14"))
      (rule "andRight" (formula "16"))
      (branch "Case 1"
         (rule "allRight" (formula "16") (inst "sk=i_0_0"))
         (rule "orRight" (formula "16"))
         (rule "orRight" (formula "16"))
         (rule "inEqSimp_leqRight" (formula "16"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "inEqSimp_geqRight" (formula "17"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "polySimp_elimOne" (formula "1") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "10"))
         (rule "polySimp_rightDist" (formula "1") (term "0,0"))
         (rule "mul_literals" (formula "1") (term "0,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0"))
         (rule "polySimp_addComm1" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1"))
         (rule "polySimp_rightDist" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
         (rule "commute_and" (formula "19"))
         (rule "allLeft" (formula "14") (inst "t=i_0_0"))
         (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0"))
         (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0") (ifseqformula "3"))
         (rule "qeq_literals" (formula "14") (term "0,0,0"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "2"))
         (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0"))
         (rule "add_literals" (formula "14") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
         (rule "add_zero_right" (formula "14") (term "0,0,0"))
         (rule "leq_literals" (formula "14") (term "0,0"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "14"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "inEqSimp_leqRight" (formula "20"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "1"))
         (rule "leq_literals" (formula "15") (term "0"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "true_left" (formula "15"))
         (rule "allLeft" (formula "16") (inst "t=i_0_0"))
         (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0"))
         (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0") (ifseqformula "4"))
         (rule "qeq_literals" (formula "16") (term "0,0,0"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "1"))
         (rule "qeq_literals" (formula "16") (term "0,1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "3"))
         (rule "andLeft" (formula "16"))
         (rule "inEqSimp_homoInEq1" (formula "16"))
         (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
         (rule "add_literals" (formula "16") (term "1,1,0"))
         (rule "times_zero_1" (formula "16") (term "1,0"))
         (rule "add_zero_right" (formula "16") (term "0"))
         (rule "leq_literals" (formula "16"))
         (rule "closeFalse" (formula "16"))
      )
      (branch "Case 2"
         (rule "allRight" (formula "16") (inst "sk=i_0"))
         (rule "orRight" (formula "16"))
         (rule "orRight" (formula "16"))
         (rule "inEqSimp_leqRight" (formula "16"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0"))
         (rule "add_zero_left" (formula "1") (term "0,0"))
         (rule "polySimp_addComm0" (formula "1") (term "0"))
         (rule "inEqSimp_geqRight" (formula "17"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
         (rule "polySimp_elimOne" (formula "2") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "polySimp_elimOne" (formula "1") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "2"))
         (rule "times_zero_1" (formula "12") (term "0,0"))
         (rule "add_zero_left" (formula "12") (term "0"))
         (rule "allLeft" (formula "16") (inst "t=i_0"))
         (rule "replace_known_right" (formula "16") (term "1") (ifseqformula "20"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "inEqSimp_commuteGeq" (formula "16") (term "0"))
         (rule "inEqSimp_homoInEq0" (formula "16") (term "1"))
         (rule "polySimp_addComm1" (formula "16") (term "0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,1"))
         (rule "polySimp_rightDist" (formula "16") (term "1,1"))
         (rule "mul_literals" (formula "16") (term "0,1,1"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,1"))
         (rule "inEqSimp_contradInEq0" (formula "16") (term "1") (ifseqformula "2"))
         (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
         (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
         (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
         (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "16") (term "0,0,1"))
         (rule "leq_literals" (formula "16") (term "0,1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "16"))
         (rule "andLeft" (formula "1"))
         (rule "inEqSimp_homoInEq1" (formula "1"))
         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
         (rule "add_literals" (formula "1") (term "1,1,0"))
         (rule "times_zero_1" (formula "1") (term "1,0"))
         (rule "add_zero_right" (formula "1") (term "0"))
         (rule "leq_literals" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
   )
)
)

}
