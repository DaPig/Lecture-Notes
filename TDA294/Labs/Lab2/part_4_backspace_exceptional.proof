\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Oct 29 10:48:32 CET 2018
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_EXPAND
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_NONE
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=20000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "..";

\proofObligation "#Proof Obligation Settings
#Mon Oct 29 10:48:32 CET 2018
name=NumericTextBox[NumericTextBox\\:\\:backspace()].JML exceptional_behavior operation contract.0
contract=NumericTextBox[NumericTextBox\\:\\:backspace()].JML exceptional_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "allden" ) (keyVersion "19f0b8c2a4fe689cd76be6cd1753b36e2e825a89"))

(autoModeTime "3937")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "self,exc,heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "8") (term "1,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "8") (term "0,0,0,0,1,0,1"))
(rule "assignment" (formula "8") (term "1"))
(builtin "One Step Simplification" (formula "8"))
(rule "methodBodyExpand" (formula "8") (term "1") (newnames "heapBefore_backspace,savedHeapBefore_backspace"))
(builtin "One Step Simplification" (formula "8"))
(rule "ifUnfold" (formula "8") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "8") (term "1") (newnames "x"))
(rule "compound_equality_comparison_1" (formula "8") (term "1") (inst "#v0=x_1"))
(rule "variableDeclarationAssign" (formula "8") (term "1"))
(rule "variableDeclaration" (formula "8") (term "1") (newnames "x_1"))
(rule "assignment_read_attribute_this" (formula "8"))
(builtin "One Step Simplification" (formula "8"))
(rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "5"))
(rule "equality_comparison_simple" (formula "8") (term "1"))
(builtin "One Step Simplification" (formula "8"))
(rule "ifSplit" (formula "8"))
(branch "if x true"
   (builtin "One Step Simplification" (formula "9"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "ifUnfold" (formula "8") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "8") (term "1") (newnames "x_2"))
   (rule "compound_inequality_comparison_1" (formula "8") (term "1") (inst "#v0=t"))
   (rule "variableDeclarationAssign" (formula "8") (term "1"))
   (rule "variableDeclaration" (formula "8") (term "1") (newnames "t"))
   (rule "assignment_read_attribute_this" (formula "8"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "inequality_comparison_simple" (formula "8") (term "1"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "ifSplit" (formula "8"))
   (branch "if x_2 true"
      (builtin "One Step Simplification" (formula "9"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "eval_order_access1" (formula "9") (term "1") (inst "#v0=t"))
      (rule "variableDeclarationAssign" (formula "9") (term "1"))
      (rule "variableDeclaration" (formula "9") (term "1") (newnames "t_1"))
      (rule "assignment_read_attribute_this" (formula "9"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "assignment_write_attribute" (formula "9"))
      (branch "Normal Execution (t_1 != null)"
         (builtin "One Step Simplification" (formula "9"))
         (rule "blockThrow" (formula "9") (term "1"))
         (rule "throwUnfold" (formula "9") (term "1") (inst "#v0=r"))
         (rule "variableDeclarationAssign" (formula "9") (term "1"))
         (rule "variableDeclaration" (formula "9") (term "1") (newnames "r_1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "1,0,1,0") (ifseqformula "1"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "8"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_8_in_NumericTextBox" (formula "7") (inst "j=j") (inst "i=i"))
         (builtin "One Step Simplification" (formula "7"))
         (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "7") (term "0,1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0"))
         (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0,0,0") (ifseqformula "6"))
         (rule "times_zero_2" (formula "7") (term "1,0,0,1,0,0,0,0"))
         (rule "add_zero_right" (formula "7") (term "0,0,1,0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "7") (term "0,1,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0,0"))
         (rule "mul_literals" (formula "7") (term "1,1,0,0,0,0"))
         (rule "nnf_notAnd" (formula "7") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "7") (term "0,0,0"))
         (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0,0"))
         (rule "mul_literals" (formula "7") (term "1,0,0,1,0,0,0"))
         (rule "add_literals" (formula "7") (term "0,0,1,0,0,0"))
         (rule "add_zero_left" (formula "7") (term "0,1,0,0,0"))
         (rule "nnf_notAnd" (formula "7") (term "0,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0,0,0"))
         (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0,0,0"))
         (rule "add_zero_right" (formula "7") (term "0,0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,0,0"))
         (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,0,0"))
         (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,0,0"))
         (rule "add_literals" (formula "7") (term "0,0,0,1,0,0,0,0"))
         (rule "add_zero_left" (formula "7") (term "0,0,1,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,0"))
         (rule "commute_or_2" (formula "7") (term "0,0,0"))
         (rule "inEqSimp_or_tautInEq0" (formula "7") (term "0,0,0,0"))
         (rule "add_zero_right" (formula "7") (term "1,1,0,0,0,0"))
         (rule "qeq_literals" (formula "7") (term "1,0,0,0,0"))
         (builtin "One Step Simplification" (formula "7"))
         (rule "true_left" (formula "7"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_5_in_NumericTextBox" (formula "7"))
         (rule "notLeft" (formula "7"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "0") (ifseqformula "2"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "9"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_6_in_NumericTextBox" (formula "8"))
         (rule "translateJavaAddInt" (formula "8") (term "1,0"))
         (rule "andLeft" (formula "8"))
         (rule "polySimp_addComm0" (formula "8") (term "1"))
         (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
         (rule "inEqSimp_homoInEq0" (formula "8"))
         (rule "times_zero_2" (formula "8") (term "1,0"))
         (rule "add_zero_right" (formula "8") (term "0"))
         (rule "applyEq" (formula "9") (term "0") (ifseqformula "7"))
         (rule "qeq_literals" (formula "9"))
         (rule "true_left" (formula "9"))
         (rule "inEqSimp_sepPosMonomial1" (formula "8"))
         (rule "mul_literals" (formula "8") (term "1"))
         (rule "arrayLengthIsAShort" (formula "8") (term "0"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "true_left" (formula "8"))
         (rule "arrayLengthNotNegative" (formula "8") (term "0"))
         (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "8"))
         (rule "leq_literals" (formula "9") (term "0"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "true_left" (formula "9"))
         (rule "instanceCreationAssignment" (formula "13") (term "1") (inst "#v0=r_2"))
         (rule "variableDeclarationAssign" (formula "13") (term "1"))
         (rule "variableDeclaration" (formula "13") (term "1") (newnames "r_2"))
         (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "13") (term "1") (inst "#v0=r_3"))
         (rule "variableDeclaration" (formula "13") (term "1") (newnames "r_3"))
         (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "variableDeclaration" (formula "13") (term "1") (newnames "__NEW__"))
         (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "13") (term "1") (inst "#v0=r_4"))
         (rule "variableDeclaration" (formula "13") (term "1") (newnames "r_4"))
         (rule "allocateInstance" (formula "13"))
         (builtin "One Step Simplification" (formula "14"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "wellFormedStorePrimitive" (formula "1") (term "0,1,0"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "5"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "dismissNonSelectedField" (formula "11") (term "0"))
         (rule "blockEmpty" (formula "16") (term "1"))
         (rule "assignment" (formula "16") (term "1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "methodBodyExpand" (formula "16") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "assignment_write_attribute_this" (formula "16"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "methodCallWithinClass" (formula "16") (term "1"))
         (rule "methodBodyExpand" (formula "16") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "methodCallSuper" (formula "16") (term "1"))
         (rule "methodBodyExpand" (formula "16") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "methodCallSuper" (formula "16") (term "1"))
         (rule "methodBodyExpand" (formula "16") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "methodCallSuper" (formula "16") (term "1"))
         (rule "methodBodyExpand" (formula "16") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "methodCallEmpty" (formula "16") (term "1"))
         (rule "blockEmpty" (formula "16") (term "1"))
         (rule "assignment_write_attribute_this" (formula "16"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "assignment_write_attribute_this" (formula "16"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "methodCallEmpty" (formula "16") (term "1"))
         (rule "methodCallEmpty" (formula "16") (term "1"))
         (rule "methodCallEmpty" (formula "16") (term "1"))
         (rule "blockEmpty" (formula "16") (term "1"))
         (rule "methodCallReturnIgnoreResult" (formula "16") (term "1"))
         (rule "methodCallReturn" (formula "16") (term "1"))
         (rule "assignment" (formula "16") (term "1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "methodCallEmpty" (formula "16") (term "1"))
         (rule "blockEmpty" (formula "16") (term "1"))
         (rule "assignment" (formula "16") (term "1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "methodBodyExpand" (formula "16") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "methodCallSuper" (formula "16") (term "1"))
         (rule "methodBodyExpand" (formula "16") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "methodCallSuper" (formula "16") (term "1"))
         (rule "methodBodyExpand" (formula "16") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "methodCallSuper" (formula "16") (term "1"))
         (rule "methodBodyExpand" (formula "16") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "methodCallEmpty" (formula "16") (term "1"))
         (rule "blockEmpty" (formula "16") (term "1"))
         (rule "assignment_write_attribute_this" (formula "16"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "assignment_write_attribute_this" (formula "16"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "methodCallEmpty" (formula "16") (term "1"))
         (rule "methodCallEmpty" (formula "16") (term "1"))
         (rule "methodCallEmpty" (formula "16") (term "1"))
         (rule "blockEmpty" (formula "16") (term "1"))
         (rule "assignment_write_attribute" (formula "16"))
         (branch "Normal Execution (r_2 != null)"
            (builtin "One Step Simplification" (formula "16"))
            (rule "assignment" (formula "16") (term "1"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "methodCallThrow" (formula "16") (term "1"))
            (rule "tryCatchThrow" (formula "16") (term "1"))
            (rule "ifElseUnfold" (formula "16") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_3"))
            (rule "equality_comparison_simple" (formula "16") (term "1"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "replace_known_right" (formula "16") (term "0,0,1,0") (ifseqformula "12"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "ifElseSplit" (formula "16"))
            (branch "if x_3 true"
               (builtin "One Step Simplification" (formula "17"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if x_3 false"
               (builtin "One Step Simplification" (formula "17"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "ifElseSplit" (formula "16"))
               (branch "if r_1 instanceof java.lang.Throwable true"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                  (rule "true_left" (formula "1"))
                  (rule "variableDeclaration" (formula "16") (term "1") (newnames "e"))
                  (rule "delete_unnecessary_cast" (formula "16") (term "1"))
                  (branch "Normal Execution (r_1 instanceof java.lang.Throwable)"
                     (builtin "One Step Simplification" (formula "17"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "assignment" (formula "16") (term "1"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "emptyModality" (formula "16") (term "1"))
                     (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "12")))
                     (rule "eqSymm" (formula "16") (term "1,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "16") (term "1,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "16") (term "0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "16") (term "0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "16") (term "0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "16") (term "1,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "16") (term "0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "16") (term "0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "16") (term "0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "16") (term "1,0,1,0,0"))
                     (rule "pullOutSelect" (formula "16") (term "0,0,0,0,0") (inst "selectSK=NumericTextBox_textBoxRenderer_0"))
                     (rule "applyEq" (formula "17") (term "1,0,1,0,0") (ifseqformula "1"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "17") (term "0,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "17") (term "1,0,1,0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_right" (formula "16") (term "0,0,0,0") (ifseqformula "14"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "pullOutSelect" (formula "16") (term "0,0,0") (inst "selectSK=TextBoxRenderer_showError_0"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "0"))
                     (rule "applyEqReverse" (formula "17") (term "0,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "Class_invariant_axiom_for_NumericTextBox" (formula "10") (inst "j=j") (inst "i=i") (ifseqformula "6"))
                     (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "13")))
                     (rule "translateJavaAddInt" (formula "10") (term "1,0,0"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "polySimp_addComm0" (formula "10") (term "1"))
                     (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0,0,0,0"))
                     (rule "applyEq" (formula "11") (term "0") (ifseqformula "8"))
                     (rule "qeq_literals" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "applyEq" (formula "10") (term "0") (ifseqformula "8"))
                     (rule "inEqSimp_homoInEq0" (formula "10"))
                     (rule "mul_literals" (formula "10") (term "1,0"))
                     (rule "add_zero_right" (formula "10") (term "0"))
                     (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0,0,0") (ifseqformula "8"))
                     (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0,0,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0,1,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                     (rule "mul_literals" (formula "10") (term "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "11") (term "1,1,0,0,0,0"))
                     (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "9"))
                     (rule "leq_literals" (formula "10") (term "0"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "nnf_notAnd" (formula "10") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "10") (term "0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,1,0,0,0"))
                     (rule "add_zero_left" (formula "10") (term "0,1,0,0,0"))
                     (rule "nnf_notAnd" (formula "10") (term "0,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,0,0"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0"))
                     (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,0,0"))
                     (rule "add_zero_left" (formula "10") (term "0,0,1,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0"))
                     (rule "Class_invariant_axiom_for_NumericTextBox" (formula "16") (term "0") (inst "j=j") (inst "i=i") (ifseqformula "6"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "translateJavaAddInt" (formula "16") (term "1,0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "16") (term "1,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "16") (term "0,1,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "16") (term "0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "16") (term "0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "16") (term "0,1,1,0,0,0,1,0"))
                     (rule "dismissNonSelectedField" (formula "16") (term "1,1,0,0,0,0,1,0"))
                     (rule "dismissNonSelectedField" (formula "16") (term "0,1,1,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "16") (term "0,1,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "16") (term "0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "16") (term "0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "16") (term "0,1,1,0,0,0,1,0"))
                     (rule "dismissNonSelectedField" (formula "16") (term "1,1,0,0,0,0,1,0"))
                     (rule "dismissNonSelectedField" (formula "16") (term "0,1,1,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "16") (term "0,1,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "16") (term "0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "16") (term "0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "16") (term "0,1,1,0,0,0,1,0"))
                     (rule "dismissNonSelectedField" (formula "16") (term "1,1,0,0,0,0,1,0"))
                     (rule "dismissNonSelectedField" (formula "16") (term "0,1,1,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,0,0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "16") (term "0,1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,0,0,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "16") (term "0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "16") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "1,0,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,0,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "0,1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0,0,1,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,1,0,1,0,0"))
                     (rule "pullOutSelect" (formula "16") (term "0,1,1,0,0") (inst "selectSK=NumericTextBox_cursorPosition_0"))
                     (rule "applyEq" (formula "17") (term "1,1,1,0,0,0,0,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "17") (term "1,1,0,1,0,0") (ifseqformula "1"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "17") (term "0,1,1,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "17") (term "1,1,1,0,0,0,0,1,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "17") (term "1,1,0,1,0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "applyEq" (formula "16") (term "0,1,1,0,0") (ifseqformula "8"))
                     (rule "qeq_literals" (formula "16") (term "1,1,0,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "applyEq" (formula "16") (term "1,1,1,0,0,0,0,1,0") (ifseqformula "8"))
                     (rule "add_zero_right" (formula "16") (term "1,1,0,0,0,0,1,0"))
                     (rule "applyEq" (formula "16") (term "1,1,1,0,0") (ifseqformula "8"))
                     (rule "add_literals" (formula "16") (term "1,1,0,0"))
                     (rule "pullOutSelect" (formula "16") (term "0,0,0,0,0") (inst "selectSK=NumericTextBox_content_0"))
                     (rule "applyEq" (formula "17") (term "0,0,1,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "17") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "17") (term "0,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "17") (term "0,0,1,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "17") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_right" (formula "16") (term "0,0,0,0") (ifseqformula "13"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "inEqSimp_subsumption1" (formula "16") (term "0,0") (ifseqformula "9"))
                     (rule "leq_literals" (formula "16") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0"))
                     (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0"))
                     (rule "add_zero_left" (formula "16") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                     (rule "nnf_notAnd" (formula "16") (term "0,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0,0,0"))
                     (rule "add_literals" (formula "16") (term "0,0,1,0,0,0,0"))
                     (rule "add_zero_left" (formula "16") (term "0,1,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "16") (term "0,0,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0,0,0"))
                     (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "16") (term "0,0,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "16") (term "0,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0,0"))
                     (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "10"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "allRight" (formula "16") (inst "sk=f_0"))
                     (rule "allRight" (formula "16") (inst "sk=o_0"))
                     (rule "orRight" (formula "16"))
                     (rule "orRight" (formula "16"))
                     (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=f_0_0"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "19"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "16"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_4"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "21"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "commute_or_2" (formula "14") (term "0,0,0"))
                     (rule "inEqSimp_or_tautInEq0" (formula "14") (term "0,0,0,0"))
                     (rule "add_literals" (formula "14") (term "1,1,0,0,0,0"))
                     (rule "qeq_literals" (formula "14") (term "1,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "true_left" (formula "14"))
                     (rule "commute_and" (formula "19"))
                     (rule "commute_and" (formula "4") (term "0,0"))
                     (rule "commute_and" (formula "3") (term "0,0"))
                     (rule "commute_and" (formula "2") (term "0,0"))
                     (rule "commute_and" (formula "1") (term "0,0"))
                     (rule "ifthenelse_split" (formula "1") (term "0"))
                     (branch "f_0 = java.lang.Object::<created> & o_0 = r_4 TRUE"
                        (rule "andLeft" (formula "1"))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "21") (term "1") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "applyEq" (formula "19") (term "2,0") (ifseqformula "1"))
                        (rule "narrowSelectType" (formula "19") (term "0") (ifseqformula "6"))
                        (rule "replace_known_right" (formula "18") (term "0,1") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "notRight" (formula "18"))
                        (rule "applyEqRigid" (formula "18") (term "0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "false_right" (formula "18"))
                        (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "3"))
                        (rule "close" (formula "14") (ifseqformula "3"))
                     )
                     (branch "f_0 = java.lang.Object::<created> & o_0 = r_4 FALSE"
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "ifthenelse_split" (formula "1") (term "0"))
                        (branch "f_0 = java.lang.Throwable::$cause & o_0 = r_4 TRUE"
                           (rule "andLeft" (formula "1"))
                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "2")))
                           (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "false_right" (formula "13"))
                           (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "18") (term "0,0,0") (ifseqformula "2"))
                           (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "13"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "notRight" (formula "18"))
                           (rule "applyEqRigid" (formula "18") (term "0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "false_right" (formula "18"))
                           (rule "applyEq" (formula "18") (term "2,0") (ifseqformula "2"))
                           (rule "narrowSelectType" (formula "18") (term "0") (ifseqformula "7"))
                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                           (rule "close" (formula "13") (ifseqformula "1"))
                        )
                        (branch "f_0 = java.lang.Throwable::$cause & o_0 = r_4 FALSE"
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch "f_0 = java.lang.Throwable::$message & o_0 = r_4 TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "13"))
                              (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "applyEq" (formula "21") (term "1,0,0,1") (ifseqformula "2"))
                              (rule "replace_known_right" (formula "21") (term "0,1") (ifseqformula "15"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "notRight" (formula "21"))
                              (rule "applyEqRigid" (formula "21") (term "0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "false_right" (formula "21"))
                              (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "3"))
                              (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "applyEqReverse" (formula "21") (term "1") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "applyEq" (formula "13") (term "0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "13"))
                              (rule "false_right" (formula "13"))
                              (rule "applyEqRigid" (formula "19") (term "2,0") (ifseqformula "2"))
                              (rule "narrowSelectType" (formula "19") (term "0") (ifseqformula "7"))
                              (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "13"))
                              (rule "false_right" (formula "13"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "3"))
                              (rule "close" (formula "14") (ifseqformula "3"))
                           )
                           (branch "f_0 = java.lang.Throwable::$message & o_0 = r_4 FALSE"
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch "f_0 = java.lang.Object::<initialized> & o_0 = r_4 TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "false_right" (formula "13"))
                                 (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "2"))
                                 (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "15"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "notRight" (formula "20"))
                                 (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "3"))
                                 (rule "eqSymm" (formula "20") (term "1"))
                                 (rule "sortsDisjointModuloNull" (formula "20") (term "1"))
                                 (rule "replace_known_right" (formula "20") (term "1,1") (ifseqformula "16"))
                                 (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "18")))
                                 (rule "false_right" (formula "20"))
                                 (rule "applyEqRigid" (formula "20") (term "2,0") (ifseqformula "2"))
                                 (rule "narrowSelectType" (formula "20") (term "0") (ifseqformula "7"))
                                 (rule "applyEq" (formula "14") (term "0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "false_right" (formula "14"))
                                 (rule "applyEq" (formula "13") (term "0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "false_right" (formula "13"))
                                 (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                 (rule "close" (formula "13") (ifseqformula "1"))
                              )
                              (branch "f_0 = java.lang.Object::<initialized> & o_0 = r_4 FALSE"
                                 (rule "close" (formula "22") (ifseqformula "1"))
                              )
                           )
                        )
                     )
                  )
                  (branch "ClassCastException (!(r_1 instanceof java.lang.Throwable))"
                     (builtin "One Step Simplification" (formula "17"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "closeTrue" (formula "16"))
                  )
               )
               (branch "if r_1 instanceof java.lang.Throwable false"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "Null Reference (r_2 = null)"
            (builtin "One Step Simplification" (formula "17"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Null Reference (t_1 = null)"
         (builtin "One Step Simplification" (formula "10"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "if x_2 false"
      (builtin "One Step Simplification" (formula "9"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "blockThrow" (formula "9") (term "1"))
      (rule "throwUnfold" (formula "9") (term "1") (inst "#v0=r"))
      (rule "variableDeclarationAssign" (formula "9") (term "1"))
      (rule "variableDeclaration" (formula "9") (term "1") (newnames "r"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "0") (ifseqformula "2"))
      (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "Partial_inv_axiom_for_JML_class_invariant_nr_8_in_NumericTextBox" (formula "7") (inst "j=j") (inst "i=i"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0,0,0"))
      (rule "polySimp_addComm1" (formula "7") (term "0,1,0,0,0,0,0"))
      (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0,0,0") (ifseqformula "6"))
      (rule "times_zero_2" (formula "7") (term "1,0,0,1,0,0,0,0"))
      (rule "add_zero_right" (formula "7") (term "0,0,1,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "7") (term "0,1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "1,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0,0"))
      (rule "mul_literals" (formula "7") (term "1,1,0,0,0,0"))
      (rule "nnf_notAnd" (formula "7") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "7") (term "0,0,0"))
      (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0,0"))
      (rule "mul_literals" (formula "7") (term "1,0,0,1,0,0,0"))
      (rule "add_literals" (formula "7") (term "0,0,1,0,0,0"))
      (rule "add_zero_left" (formula "7") (term "0,1,0,0,0"))
      (rule "nnf_notAnd" (formula "7") (term "0,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,0,0"))
      (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,0,0"))
      (rule "add_literals" (formula "7") (term "0,0,0,1,0,0,0,0"))
      (rule "add_zero_left" (formula "7") (term "0,0,1,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0,0,0"))
      (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "7") (term "0,0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,0,0"))
      (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
      (rule "commute_or_2" (formula "7") (term "0,0,0"))
      (rule "inEqSimp_or_tautInEq0" (formula "7") (term "0,0,0,0"))
      (rule "add_zero_right" (formula "7") (term "1,1,0,0,0,0"))
      (rule "qeq_literals" (formula "7") (term "1,0,0,0,0"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "true_left" (formula "7"))
      (rule "Partial_inv_axiom_for_JML_class_invariant_nr_5_in_NumericTextBox" (formula "7"))
      (rule "notLeft" (formula "7"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "0") (ifseqformula "2"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "9"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "Partial_inv_axiom_for_JML_class_invariant_nr_6_in_NumericTextBox" (formula "8"))
      (rule "translateJavaAddInt" (formula "8") (term "1,0"))
      (rule "andLeft" (formula "8"))
      (rule "polySimp_addComm0" (formula "8") (term "1"))
      (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
      (rule "inEqSimp_homoInEq0" (formula "8"))
      (rule "times_zero_2" (formula "8") (term "1,0"))
      (rule "add_zero_right" (formula "8") (term "0"))
      (rule "applyEq" (formula "9") (term "0") (ifseqformula "7"))
      (rule "qeq_literals" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "inEqSimp_sepPosMonomial1" (formula "8"))
      (rule "mul_literals" (formula "8") (term "1"))
      (rule "arrayLengthIsAShort" (formula "8") (term "0"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "arrayLengthNotNegative" (formula "8") (term "0"))
      (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "8"))
      (rule "leq_literals" (formula "9") (term "0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "instanceCreationAssignment" (formula "12") (term "1") (inst "#v0=r_1"))
      (rule "variableDeclarationAssign" (formula "12") (term "1"))
      (rule "variableDeclaration" (formula "12") (term "1") (newnames "r_5"))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "12") (term "1") (inst "#v0=r_6"))
      (rule "variableDeclaration" (formula "12") (term "1") (newnames "r_6"))
      (rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_<createObject>_0,savedHeapBefore_<createObject>_0"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "variableDeclaration" (formula "12") (term "1") (newnames "__NEW___1"))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "12") (term "1") (inst "#v0=r_7"))
      (rule "variableDeclaration" (formula "12") (term "1") (newnames "r_7"))
      (rule "allocateInstance" (formula "12"))
      (builtin "One Step Simplification" (formula "13"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "4")))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "blockEmpty" (formula "15") (term "1"))
      (rule "assignment" (formula "15") (term "1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<create>_0,savedHeapBefore_<create>_0"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "assignment_write_attribute_this" (formula "15"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "methodCallWithinClass" (formula "15") (term "1"))
      (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<prepareEnter>_0,savedHeapBefore_<prepareEnter>_0"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "methodCallSuper" (formula "15") (term "1"))
      (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<prepare>_2,savedHeapBefore_<prepare>_2"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "methodCallSuper" (formula "15") (term "1"))
      (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<prepare>_3,savedHeapBefore_<prepare>_3"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "methodCallSuper" (formula "15") (term "1"))
      (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<prepare>_4,savedHeapBefore_<prepare>_4"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "methodCallEmpty" (formula "15") (term "1"))
      (rule "blockEmpty" (formula "15") (term "1"))
      (rule "assignment_write_attribute_this" (formula "15"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "assignment_write_attribute_this" (formula "15"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "methodCallEmpty" (formula "15") (term "1"))
      (rule "methodCallEmpty" (formula "15") (term "1"))
      (rule "methodCallEmpty" (formula "15") (term "1"))
      (rule "blockEmpty" (formula "15") (term "1"))
      (rule "methodCallReturnIgnoreResult" (formula "15") (term "1"))
      (rule "methodCallReturn" (formula "15") (term "1"))
      (rule "assignment" (formula "15") (term "1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "methodCallEmpty" (formula "15") (term "1"))
      (rule "blockEmpty" (formula "15") (term "1"))
      (rule "assignment" (formula "15") (term "1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<init>_3,savedHeapBefore_<init>_3"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "methodCallSuper" (formula "15") (term "1"))
      (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<init>_4,savedHeapBefore_<init>_4"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "methodCallSuper" (formula "15") (term "1"))
      (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<init>_5,savedHeapBefore_<init>_5"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "methodCallSuper" (formula "15") (term "1"))
      (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<init>_6,savedHeapBefore_<init>_6"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "methodCallEmpty" (formula "15") (term "1"))
      (rule "blockEmpty" (formula "15") (term "1"))
      (rule "assignment_write_attribute_this" (formula "15"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "assignment_write_attribute_this" (formula "15"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "methodCallEmpty" (formula "15") (term "1"))
      (rule "methodCallEmpty" (formula "15") (term "1"))
      (rule "methodCallEmpty" (formula "15") (term "1"))
      (rule "blockEmpty" (formula "15") (term "1"))
      (rule "assignment_write_attribute" (formula "15"))
      (branch "Normal Execution (r_5 != null)"
         (builtin "One Step Simplification" (formula "15"))
         (rule "assignment" (formula "15") (term "1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "methodCallThrow" (formula "15") (term "1"))
         (rule "tryCatchThrow" (formula "15") (term "1"))
         (rule "ifElseUnfold" (formula "15") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_4"))
         (rule "equality_comparison_simple" (formula "15") (term "1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "replace_known_right" (formula "15") (term "0,0,1,0") (ifseqformula "12"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "ifElseSplit" (formula "15"))
         (branch "if x_4 true"
            (builtin "One Step Simplification" (formula "16"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "if x_4 false"
            (builtin "One Step Simplification" (formula "16"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "ifElseSplit" (formula "15"))
            (branch "if r instanceof java.lang.Throwable true"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
               (rule "true_left" (formula "1"))
               (rule "variableDeclaration" (formula "15") (term "1") (newnames "e_1"))
               (rule "delete_unnecessary_cast" (formula "15") (term "1"))
               (branch "Normal Execution (r instanceof java.lang.Throwable)"
                  (builtin "One Step Simplification" (formula "16"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "assignment" (formula "15") (term "1"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "emptyModality" (formula "15") (term "1"))
                  (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "12")))
                  (rule "eqSymm" (formula "15") (term "1,0,0,1"))
                  (rule "dismissNonSelectedField" (formula "15") (term "0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "15") (term "0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "15") (term "0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "15") (term "0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "15") (term "1,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "15") (term "0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "15") (term "0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "15") (term "1,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "15") (term "1,0,1,0,0"))
                  (rule "applyEq" (formula "15") (term "1,0,0,0,0,0,1") (ifseqformula "3"))
                  (rule "pullOutSelect" (formula "15") (term "0,0,0,0,0") (inst "selectSK=NumericTextBox_textBoxRenderer_1"))
                  (rule "applyEq" (formula "16") (term "1,0,1,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                  (rule "applyEqReverse" (formula "16") (term "0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "16") (term "1,0,1,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_left" (formula "15") (term "0,0,0,0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "Class_invariant_axiom_for_NumericTextBox" (formula "10") (inst "j=j") (inst "i=i") (ifseqformula "6"))
                  (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "13")))
                  (rule "translateJavaAddInt" (formula "10") (term "1,0,0"))
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "polySimp_addComm0" (formula "10") (term "1"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0"))
                  (rule "applyEq" (formula "11") (term "0") (ifseqformula "8"))
                  (rule "qeq_literals" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "applyEq" (formula "10") (term "0") (ifseqformula "8"))
                  (rule "inEqSimp_homoInEq0" (formula "10"))
                  (rule "times_zero_2" (formula "10") (term "1,0"))
                  (rule "add_zero_right" (formula "10") (term "0"))
                  (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0,0,0") (ifseqformula "8"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0,0,0"))
                  (rule "add_zero_right" (formula "11") (term "0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                  (rule "mul_literals" (formula "10") (term "1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "11") (term "1,1,0,0,0,0"))
                  (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "9"))
                  (rule "leq_literals" (formula "10") (term "0"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "nnf_notAnd" (formula "10") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "10") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "10") (term "0,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "10") (term "0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,0,0"))
                  (rule "add_zero_left" (formula "10") (term "0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,0,0"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                  (rule "Class_invariant_axiom_for_NumericTextBox" (formula "15") (term "0") (inst "j=j") (inst "i=i") (ifseqformula "6"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "translateJavaAddInt" (formula "15") (term "1,0,1,0,0"))
                  (rule "polySimp_addComm0" (formula "15") (term "1,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "15") (term "1,1,0,0,0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "15") (term "0,1,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "15") (term "0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "15") (term "0,1,1,0,0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "15") (term "0,1,1,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "15") (term "1,1,0,0,0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "15") (term "0,1,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "15") (term "0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "15") (term "0,1,1,0,0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "15") (term "0,1,1,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "15") (term "1,1,0,0,0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "15") (term "0,1,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "15") (term "0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "15") (term "0,1,1,0,0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "15") (term "0,1,1,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "15") (term "0,1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "15") (term "0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "15") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "1,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "0,1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,1,0,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,0,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,1,0,1,0,0"))
                  (rule "pullOutSelect" (formula "15") (term "0,1,1,0,0") (inst "selectSK=NumericTextBox_cursorPosition_1"))
                  (rule "applyEq" (formula "16") (term "1,1,1,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "16") (term "1,1,0,1,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                  (rule "applyEqReverse" (formula "16") (term "0,1,1,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "16") (term "1,1,1,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "16") (term "1,1,0,1,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "applyEq" (formula "15") (term "1,1,1,0,0,0,0,1,0") (ifseqformula "8"))
                  (rule "add_literals" (formula "15") (term "1,1,0,0,0,0,1,0"))
                  (rule "applyEq" (formula "15") (term "1,1,0,1,0,0") (ifseqformula "8"))
                  (rule "add_zero_right" (formula "15") (term "1,0,1,0,0"))
                  (rule "applyEq" (formula "15") (term "0,1,1,0,0") (ifseqformula "8"))
                  (rule "qeq_literals" (formula "15") (term "1,1,0,0"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "pullOutSelect" (formula "15") (term "0,0,0,0,0") (inst "selectSK=NumericTextBox_content_1"))
                  (rule "applyEq" (formula "16") (term "0,0,1,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "16") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                  (rule "applyEqReverse" (formula "16") (term "0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "16") (term "0,0,1,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "16") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "15") (term "0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "inEqSimp_subsumption1" (formula "15") (term "0,0") (ifseqformula "9"))
                  (rule "leq_literals" (formula "15") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "nnf_notAnd" (formula "15") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "15") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "15") (term "0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "15") (term "0,0,1,0,0,0,0"))
                  (rule "add_zero_left" (formula "15") (term "0,1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "15") (term "0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "15") (term "0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,0,0,0"))
                  (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "15") (term "0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0,0,0"))
                  (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "10"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "allRight" (formula "15") (inst "sk=f_1"))
                  (rule "allRight" (formula "15") (inst "sk=o_1"))
                  (rule "orRight" (formula "15"))
                  (rule "orRight" (formula "15"))
                  (rule "pullOutSelect" (formula "17") (term "0") (inst "selectSK=f_1_0"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "18"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_2"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_3"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "16"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "commute_or_2" (formula "14") (term "0,0,0"))
                  (rule "inEqSimp_or_tautInEq0" (formula "14") (term "0,0,0,0"))
                  (rule "add_zero_right" (formula "14") (term "1,1,0,0,0,0"))
                  (rule "qeq_literals" (formula "14") (term "1,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "true_left" (formula "14"))
                  (rule "commute_and" (formula "18"))
                  (rule "commute_and" (formula "4") (term "0,0"))
                  (rule "commute_and" (formula "3") (term "0,0"))
                  (rule "commute_and" (formula "2") (term "0,0"))
                  (rule "commute_and" (formula "1") (term "0,0"))
                  (rule "ifthenelse_split" (formula "1") (term "0"))
                  (branch "f_1 = java.lang.Object::<created> & o_1 = r_7 TRUE"
                     (rule "andLeft" (formula "1"))
                     (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "applyEq" (formula "18") (term "2,0") (ifseqformula "1"))
                     (rule "narrowSelectType" (formula "18") (term "0") (ifseqformula "6"))
                     (rule "replace_known_right" (formula "17") (term "0,1") (ifseqformula "18"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "notRight" (formula "17"))
                     (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "3"))
                     (rule "close" (formula "14") (ifseqformula "3"))
                  )
                  (branch "f_1 = java.lang.Object::<created> & o_1 = r_7 FALSE"
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "ifthenelse_split" (formula "1") (term "0"))
                     (branch "f_1 = java.lang.Throwable::$cause & o_1 = r_7 TRUE"
                        (rule "andLeft" (formula "1"))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "2")))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "applyEqRigid" (formula "18") (term "0,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "false_right" (formula "18"))
                        (rule "applyEq" (formula "18") (term "0,0,0") (ifseqformula "2"))
                        (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "15"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "notRight" (formula "18"))
                        (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "3"))
                        (rule "applyEqRigid" (formula "19") (term "2,0") (ifseqformula "2"))
                        (rule "narrowSelectType" (formula "19") (term "0") (ifseqformula "8"))
                        (rule "eqSymm" (formula "19"))
                        (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "eqSymm" (formula "18"))
                        (rule "applyEq" (formula "13") (term "0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "false_right" (formula "13"))
                        (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                        (rule "close" (formula "13") (ifseqformula "1"))
                     )
                     (branch "f_1 = java.lang.Throwable::$cause & o_1 = r_7 FALSE"
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "ifthenelse_split" (formula "1") (term "0"))
                        (branch "f_1 = java.lang.Throwable::$message & o_1 = r_7 TRUE"
                           (rule "andLeft" (formula "1"))
                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "applyEq" (formula "21") (term "2,0") (ifseqformula "1"))
                           (rule "narrowSelectType" (formula "21") (term "0") (ifseqformula "7"))
                           (rule "eqSymm" (formula "21"))
                           (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "eqSymm" (formula "20"))
                           (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "false_right" (formula "12"))
                           (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "false_right" (formula "12"))
                           (rule "applyEq" (formula "17") (term "0,0,0") (ifseqformula "2"))
                           (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "13"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "notRight" (formula "17"))
                           (rule "applyEq" (formula "17") (term "0,1") (ifseqformula "3"))
                           (rule "replace_known_right" (formula "17") (term "1") (ifseqformula "14"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "false_right" (formula "17"))
                           (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                           (rule "close" (formula "13") (ifseqformula "1"))
                        )
                        (branch "f_1 = java.lang.Throwable::$message & o_1 = r_7 FALSE"
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch "f_1 = java.lang.Object::<initialized> & o_1 = r_7 TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "12"))
                              (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "13"))
                              (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "2"))
                              (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "16"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "notRight" (formula "20"))
                              (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "3"))
                              (rule "applyEqRigid" (formula "20") (term "0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "false_right" (formula "20"))
                              (rule "applyEq" (formula "20") (term "2,0") (ifseqformula "2"))
                              (rule "narrowSelectType" (formula "20") (term "0") (ifseqformula "7"))
                              (rule "applyEq" (formula "13") (term "0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "13"))
                              (rule "false_right" (formula "13"))
                              (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "false_right" (formula "14"))
                              (rule "applyEq" (formula "13") (term "0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "13"))
                              (rule "false_right" (formula "13"))
                              (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                              (rule "close" (formula "13") (ifseqformula "1"))
                           )
                           (branch "f_1 = java.lang.Object::<initialized> & o_1 = r_7 FALSE"
                              (rule "close" (formula "21") (ifseqformula "1"))
                           )
                        )
                     )
                  )
               )
               (branch "ClassCastException (!(r instanceof java.lang.Throwable))"
                  (builtin "One Step Simplification" (formula "16"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "closeTrue" (formula "15"))
               )
            )
            (branch "if r instanceof java.lang.Throwable false"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch "Null Reference (r_5 = null)"
         (builtin "One Step Simplification" (formula "16"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
         (rule "closeFalse" (formula "1"))
      )
   )
)
(branch "if x false"
   (builtin "One Step Simplification" (formula "9"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "closeFalse" (formula "1"))
)
)

}
